#!/usr/bin/env python
import os, os.path as path

Import('build')

Env = build.env.Clone()
Env.Append(CPPDEFINES=('KROLL_LUA_API_EXPORT', 1))
build.add_thirdparty(Env, 'poco')

if build.is_osx():
	Env.Append(CPPPATH=[build.kroll_include_dir,
						path.join('Resources', 'osx', 'include')])
						
	Env.Append(LIBPATH=[path.join('Resources', 'osx')])
	Env.Append(LIBS=['kroll',
					 'lua5.1'])

elif build.is_linux():
	Env.Append(CPPPATH=[webkit_inc, build.kroll_include_dir])

elif build.is_win32():
	Env.Append(CPPPATH=[path.join(build.third_party, 'icu', 'include'),
                        build.kroll_include_dir,
                        path.join('Resources', 'win32', 'include')])

	Env.Append(LIBPATH=[path.join('Resources', 'win32')])
	Env.Append(LIBS=['kernel32', 'shell32',
                     'user32', 'ole32',
                     'comctl32', 'shlwapi',
                     'oleaut32', 'icuuc', 
                     'pthreadVC2', 'kroll',
                     'lua5.1'])
	Env.Append(LINKFLAGS=['/LTCG', '/INCREMENTAL:NO'])

m = build.add_module('lua')
Env.SharedLibrary(m.build_dir + '/luamodule', Glob('*.cpp'))
Env.SharedLibrary(build.dir + '/luamodule', Glob('*.cpp'))
build.utils.CopyTree(Glob('*.py'), m.build_dir)
